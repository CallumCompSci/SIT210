#include <WiFiS3.h>
//Internet connection
#include "secrets.h"
const char* ssid = SECRET_SSID;
const char* pass = SECRET_PASS;
int status = WL_IDLE_STATUS;

WiFiClient client;

//DHT includes
#include <DHT.h>
#include <DHT_U.h>
#include "DHT.h"

//Definitions
//Temp and Humidity
#define DHTPIN 2
// Digital pin connected to the DHT sensor
#define DHTTYPE DHT22 // DHT 22 (AM2302)
DHT dht(DHTPIN, DHTTYPE);

void PrintNetwork()
{
  Serial.print("WiFi Status: ");
  Serial.println(WiFi.status());
  Serial.print("SSID: ");
  Serial.println(WiFi.SSID());
  IPAddress ip = WiFi.localIP();
  Serial.print("IP Address: ");
  Serial.println(ip);
}




//Wifi connection method
void ConnectWiFi()
{
  // check for the WiFi module:
  if (WiFi.status() == WL_NO_MODULE) {
  Serial.println("Communication with WiFi module failed!");
  while (true);
  }
  String fv = WiFi.firmwareVersion();
  if (fv < WIFI_FIRMWARE_LATEST_VERSION) {
  Serial.println("Please upgrade the firmware");
  }
  // Attempt to connect to WiFi network:

  while (status != WL_CONNECTED) {
  Serial.print("Attempting to connect to WPA SSID: ");
  Serial.println(ssid);
  // Connect to WPA/WPA2 network:
  status = WiFi.begin(ssid, pass);
  // wait 10 seconds for connection:
  delay(10000);
  }
  // You're connected now, so print out the data:
  Serial.println("You're connected to Wifi");
  PrintNetwork();
}

void ThingSpeakWrite(float fieldValue, float fieldValue2)
{
  char server[] = "api.thingspeak.com";
  unsigned long channelNumber = SECRET_CH_ID;
  String writeAPIKey = SECRET_WRITE_APIKEY;
  int channelField = 1;
  if (client.connect(server, 80))
  {
  String postData= "api_key=" + writeAPIKey + "&field" + String(channelField) + "=" + String(fieldValue) + "&field" + String(channelField + 1) + "=" + String(fieldValue2);
  client.println( "POST /update HTTP/1.1" );
  client.println( "Host: api.thingspeak.com" );
  client.println( "Connection: close" );
  client.println( "Content-Type: application/x-www-form-urlencoded" );
  client.println( "Content-Length: " + String( postData.length() ) );
  client.println();
  client.println( postData );
  }
  else
  {
  Serial.println ( "Connection Failed" );
  }
}




void setup() {

  Serial.begin(9600);
  ConnectWiFi();
  dht.begin();
}



void loop() {

  
  //Temp and Humid
  float humidity = dht.readHumidity();
  float temperature = dht.readTemperature();
  if (isnan(humidity) || isnan(temperature)) {
  Serial.println("Failed to read from DHT sensor!");
  return;
  }
  
  //Print to serial monitor
  Serial.print("Humidity: ");
  Serial.print(humidity);
  Serial.print("%, Temp: ");
  Serial.print(temperature);
  Serial.println(" Celsius");
  ThingSpeakWrite(temperature, humidity);
  delay(10000);
  
}
